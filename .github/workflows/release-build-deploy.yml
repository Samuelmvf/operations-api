name: Release Build and Deploy

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  build-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: "21"
          cache: gradle

      - name: Make gradlew executable
        run: chmod +x ./gradlew

      - name: Build and test
        run: ./gradlew clean test build

      - name: Archive artifact
        uses: actions/upload-artifact@v4
        with:
          name: operations-api-jar
          path: build/libs/*.jar

  deploy:
    needs: build-test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    env:
      DB_URL: ${{ secrets.DB_URL }}
      DB_USERNAME: ${{ secrets.DB_USERNAME }}
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
      JWT_SECRET: ${{ secrets.JWT_SECRET }}
      JWT_EXPIRATION: ${{ secrets.JWT_EXPIRATION }}
      JWT_REFRESH_EXPIRATION: ${{ secrets.JWT_REFRESH_EXPIRATION }}

    steps:
      - name: Configure AWS CLI
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: operations-api-jar
          path: .

      - name: Select JAR
        id: jar
        run: echo "JAR_FILE=$(ls *.jar | head -n1)" >> "$GITHUB_OUTPUT"

      - name: Add SSH key
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.EC2_SSH_KEY }}

      - name: Known hosts
        run: ssh-keyscan -H ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts

      - name: Copy JAR to EC2
        run: scp "${{ steps.jar.outputs.JAR_FILE }}" ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }}:/opt/operations-api/app.jar

      - name: Restart service
        run: |
          ssh ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} "sudo systemctl restart operations-api && sudo systemctl status --no-pager operations-api | cat"
